import{_ as e,c as o,o as c,a4 as d}from"./chunks/framework.BHUpnhyN.js";const x=JSON.parse('{"title":"redux","description":"","frontmatter":{},"headers":[],"relativePath":"react/redux/01_redux/README.md","filePath":"react/redux/01_redux/README.md"}'),a={name:"react/redux/01_redux/README.md"},t=d('<h1 id="redux" tabindex="-1">redux <a class="header-anchor" href="#redux" aria-label="Permalink to &quot;redux&quot;">​</a></h1><h2 id="使用场景" tabindex="-1">使用场景 <a class="header-anchor" href="#使用场景" aria-label="Permalink to &quot;使用场景&quot;">​</a></h2><p>专门用于状态管理的JS库，不是react的插件，仅仅是名字和react有点像 可以用在react vue angular 但是基本是与react配合使用，因为vue有vuex 作用：集中式管理react应用中多个组件共享的状态</p><p>场景：</p><ol><li>某个组件的状态，需要让其他组件随时可以获取到（共享）</li><li>一个组件需要改变另一个组件的状态（通信）</li></ol><h2 id="三个核心概念" tabindex="-1">三个核心概念 <a class="header-anchor" href="#三个核心概念" aria-label="Permalink to &quot;三个核心概念&quot;">​</a></h2><ol><li><p><code>action</code></p><ul><li>一个动作对象，用来描述想怎么改数据，在某些场景也可以是一个函数类型</li><li>包含两个属性 <code>type</code> 标识属性，值为字符串 <code>data</code> 数据属性 值是任意类型</li></ul></li><li><p><code>reducer</code></p><ul><li>一个函数，用于初始化状态，加工状态，根据<code>action</code>对象的描述生成一个新的状态数据</li><li>加工时，根据旧的<code>state</code>和<code>action</code>，产生新的<code>state</code>的纯函数</li></ul></li><li><p><code>store</code></p><ul><li>一个对象，将<code>state</code> <code>action</code> <code>reducer</code>联系在一起的对象</li><li>使用<code>createStore</code>函数传入<code>reducer</code>函数，创建一个<code>store</code></li><li><code>store</code>的<code>subscribe</code>方法订阅数据变化</li><li><code>store</code>的<code>dispatch</code>提交<code>action</code>对象触发<code>reducer</code>状态数据变化</li><li><code>store</code>的<code>getState</code>方法获取状态数据更新到视图</li></ul></li></ol>',7),r=[t];function i(l,s,u,n,_,p){return c(),o("div",null,r)}const m=e(a,[["render",i]]);export{x as __pageData,m as default};
