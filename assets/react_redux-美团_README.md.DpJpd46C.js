import{_ as l,c as t,o as i,a4 as a}from"./chunks/framework.BHUpnhyN.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"react/redux-美团/README.md","filePath":"react/redux-美团/README.md"}'),e={name:"react/redux-美团/README.md"},o=a('<h3 id="_01-渲染商品列表" tabindex="-1">01_渲染商品列表 <a class="header-anchor" href="#_01-渲染商品列表" aria-label="Permalink to &quot;01_渲染商品列表&quot;">​</a></h3><ol><li>创建整套foodsStore的redux流程，使用@reduxjs/toolkit</li></ol><ul><li>创建store/modules/foodsStore.js，创建foods的Store对象并导出reducer，导出异步获取数据的高阶函数</li><li>创建store/index.js，组合foodsStore并导出一个store对象</li><li>在src/index.js根目录注入store</li></ul><ol start="2"><li>App.js</li></ol><ul><li>引入fetchFoodList的action函数，使用useSelector, useDispatch钩子获取和展示数据，</li></ul><h3 id="_02-渲染分类列表" tabindex="-1">02_渲染分类列表 <a class="header-anchor" href="#_02-渲染分类列表" aria-label="Permalink to &quot;02_渲染分类列表&quot;">​</a></h3><ol><li>App.js</li></ol><ul><li>给Menu组件传入useSelector钩子获取的列表数据</li></ul><h3 id="_03-分类列表点击" tabindex="-1">03_分类列表点击 <a class="header-anchor" href="#_03-分类列表点击" aria-label="Permalink to &quot;03_分类列表点击&quot;">​</a></h3><ol><li>点击高亮</li></ol><ul><li>在foodsStore中记录点击状态activeIndex</li><li>在Menu组件判断activeIndex和当前index，修改class的值</li></ul><ol start="2"><li>点击切换商品列表</li></ol><ul><li>App.js中判断activeIndex与foodsList的index，渲染列表</li></ul><h3 id="_04-添加购物车实现" tabindex="-1">04_添加购物车实现 <a class="header-anchor" href="#_04-添加购物车实现" aria-label="Permalink to &quot;04_添加购物车实现&quot;">​</a></h3><ol><li>foodsStore.js</li></ol><ul><li>RTK增加cartList和cartFlag状态的管理，增加setCartList的action函数</li><li>setCartList的功能1：cartFlag默认为false，只要添加购物车，cartFlag状态就为true</li><li>setCartList的功能2：判断setCartList是否包含当前添加项，已包含只更新count，未包含追加</li></ul><ol start="2"><li>统计区域功能</li></ol><ul><li>Cart组件，获取cartList和cartFlag</li><li>用cartList的length更新购物车数量</li><li>用cartList遍历计算总价</li><li>用cartFlag判断类名展示高亮效果</li></ul><h3 id="_05-购物车列表" tabindex="-1">05_购物车列表 <a class="header-anchor" href="#_05-购物车列表" aria-label="Permalink to &quot;05_购物车列表&quot;">​</a></h3><ol><li>控制列表渲染</li></ol><ul><li>RTK增加showCartVisible状态和setShowCartVisible action函数</li><li>Cart组件，在需要展示和隐藏的地方调用setShowCartVisible</li><li>Cart组件，购物车列表和遮罩层根据showCartVisible判断，修改类名展示和隐藏元素</li><li>Cart组件，用cartList渲染购物车列表</li></ul><ol start="2"><li>购物车增减逻辑实现</li></ol><ul><li>RTK，新增addCount、reduceCount、clearCartList三个action函数</li><li>clearCartList直接清空购物车</li><li>addCount给购物车的项目累加count</li><li>reduceCount如果项目的count大于1累减，如果等于1从数组中删除该项</li><li>所有清空和减项，需要考虑修改cartFalg和showCartVisible的状态</li><li>在Cart组件中调用addCount、reduceCount、clearCartList</li></ul>',23),r=[o];function s(c,d,u,n,_,h){return i(),t("div",null,r)}const x=l(e,[["render",s]]);export{f as __pageData,x as default};
